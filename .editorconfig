# ---------------------------------------------------------------------------------------------------------------------

# EditorConfig is awesome: http://EditorConfig.org

# File format: http://editorconfig.org/#file-format-details
# Standardized properties: https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties
# Visual Studio styling: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# Good examples
# .NET Core project: https://github.com/dotnet/corefx/blob/master/.editorconfig
# Various other projects: https://github.com/editorconfig/editorconfig/wiki/Projects-Using-EditorConfig

# Visual Studio 2017 has built-in support
# Visual Studio 2010, 2012, 2013, 2015 support via extension: https://marketplace.visualstudio.com/items?itemName=EditorConfigTeam.EditorConfig
# Visual Studio Code support via extension: https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig
# Other IDE support here: http://editorconfig.org/#download

# ---------------------------------------------------------------------------------------------------------------------

# Top-most EditorConfig file
root = true

# ---------------------------------------------------------------------------------------------------------------------

# All files
[*]
end_of_line = crlf
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true

# JavaScript / TypeScript source files
[*.{js,ts,jsx,tsx}]
tab_width = 4
indent_style = space
quote_type = single

[*.{less,css}]
tab_width = 4
indent_style = space

# [CS]HTML, SVG source files
[*.{cshtml,html,svg}]
tab_width = 4
indent_style = space

# .NET code files
[*.{cs,csx,vb,vbx}]
indent_style = tab
#indent_size = 4 #Leave it unset so the user can tell the IDE what he/she likes

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2

[*.resx]
indent_style = space
indent_size = 2

# JSON files
[*.json]
indent_size = 2
indent_style = space

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2
indent_style = space

# Use ascii endcoding for csv's.  One primary use of CSV files is for our automation
# config. MSFT's DataSource attribute stuff chokes on UTF-8+BOM. Which is apparently
# is the only way VS's EditorConfig knows to do UTF-8.
[*.csv]
charset = latin1

# ---------------------------------------------------------------------------------------------------------------------

# Dotnet code style settings
# NOTE: Initial commit shows defaults for Visual Studio 2017 and are commented out until team discussion
[*.{cs,vb}]

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# Use "this." and "Me." for fields, properties, events
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_method = false:suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:none
dotnet_style_predefined_type_for_member_access = true:none

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# name all constant fields using PascalCase
# NOTE: not supported in all editors
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# internal and private fields should be _camelCase
# NOTE: not supported in all editors
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# ---------------------------------------------------------------------------------------------------------------------

# CSharp code style settings
# NOTE: Initial commit shows defaults for Visual Studio 2017 and are commented out until team discussion
[*.cs]
indent_brace_style = Allman

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = false:none
csharp_style_var_elsewhere = false:none

# Prefer method-like constructs to have a expression body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_within_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# ---------------------------------------------------------------------------------------------------------------------
